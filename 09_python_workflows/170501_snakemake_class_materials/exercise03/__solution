# vim: set ft=python:

###
### Exercise 3 - incorporate the featureCounts chunk as a rule
###
#
# note: rules don't have to be in any particular order

rule all:
    input: "04count/ERR458495",
           "04count/ERR458502"

rule clean:
    shell:
        """
        rm -rf 02aln 04count
        """

###
### FeatureCounts chunk - make this into a rule and incorporate it into the pipeline
###
rule count:    
    input: bam = "02aln/{sample}.bam",
           annot = "00ref/R64-1-1.genes.gtf"
    output: "04count/{sample}"
    log: "00log/count_{sample}"
    params: subread_ver = "1.5.1"
    threads: 2
    shell:
        """
        exec &> {log}
        module load subread/{params.subread_ver}
        featureCounts -a {input.annot} -o {output} \
                -T {threads} --minOverlap 10 {input.bam}
        """

rule hisat2:
    input: fq = "00fastq/{sample}.fastq.gz",
           idx = "00ref/hisat_index/R64-1-1"
    output: bam = "02aln/{sample}.bam",
            bai = "02aln/{sample}.bam.bai"
    threads: 4
    log: "00log/hisat2_{sample}"
    params: hisat_ver = "2.0.5",
            samtools_ver = "1.4"
    shell:
        """
        exec &> {log}
        module load hisat/{params.hisat_ver} samtools/{params.samtools_ver}
        mkdir -p 02aln
        hisat2 -x {input.idx} -U {input.fq} --threads {threads} \
          | samtools sort -T tmp/{wildcards.sample} -O BAM \
          > {output.bam}
        samtools index {output.bam}
        """
    
    
